# --- Single-Stage Build Environment ---
# Use the official Ubuntu 22.04 image as the base.
FROM ubuntu:22.04

# Set environment variables to allow non-interactive installation of packages.
C

# Update the package list and install all dependencies for both building and running:
# curl (for NodeSource), Node.js (for building), and Nginx (for serving).
RUN apt-get update && \
    apt-get install -y curl && \
    curl -fsSL https://deb.nodesource.com/setup_lts.x | bash - && \
    apt-get install -y nodejs nginx --no-install-recommends

# Set the working directory for the build process.
WORKDIR /app

# Copy package.json and package-lock.json first to leverage Docker's cache.
COPY package*.json ./

# Install project dependencies.
RUN npm install

# Copy the rest of the application source code.
COPY . .

# Build the React app for production. This creates a 'build' folder inside /app.
RUN npm run build

# Copy the built static files from the build directory to the Nginx web root.
# We use 'cp' because we are in the same stage.
RUN cp -r /app/build/* /var/www/html/

# Copy our custom Nginx configuration file to overwrite the default one.
COPY nginx.conf /etc/nginx/sites-available/default

# Expose port 80 to allow traffic to the Nginx server.
EXPOSE 80

# The command to start the Nginx server when the container launches.
# 'daemon off;' is crucial for Docker as it keeps the process in the foreground.
CMD ["nginx", "-g", "daemon off;"]
